type Color = $Keys<typeof palette>;

type SpacingScale = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
type Spacing = {
  ma?: SpacingScale,
  mv?: SpacingScale, mh?: SpacingScale,
  mt?: SpacingScale, mb?: SpacingScale,
  ml?: SpacingScale, mr?: SpacingScale,
  pa?: SpacingScale,
  pv?: SpacingScale, ph?: SpacingScale,
  pt?: SpacingScale, pb?: SpacingScale,
  pl?: SpacingScale, pr?: SpacingScale,
};

type Widths = 1 | 2 | 3 | 4 | 5 | 10 | 20 | 25 | 30 | 33 | 34
  | 40 | 50 | 60 | 70 | 75 | 80 | 90 | 100;
type Heights = 1 | 2 | 3 | 4 | 5 | 25 | 50 | 75 | 100;

type TypeScale = 1 | 2 | 3 | 4 | 5 | 6
  | 'headline' | 'subheadline';
type FontWeights = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;
type LineHeights = 'solid' | 'copy' | 'title';

type BorderSide = boolean | Color;
type Border = {
  ba?: BorderSide,
  bt?: BorderSide,
  br?: BorderSide,
  bb?: BorderSide,
  bl?: BorderSide,
};

type RadiusScale = 0 | 1 | 2 | 3 | 4 | 100 | 'pill';
type RadiusSide = 'top' | 'right' | 'bottom' | 'left';
type BorderRadius = {
  sides: RadiusSide[] | 'all',
  size: RadiusScale
};
